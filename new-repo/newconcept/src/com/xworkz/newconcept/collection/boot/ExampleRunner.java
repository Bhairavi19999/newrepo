package com.xworkz.newconcept.collection.boot;

import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;

public class ExampleRunner {

	public static void main(String[] args) {
		Collection<String> flowers = new ArrayList<>();
		flowers.add("rose");
		flowers.add("sunflower");
		flowers.add("lilly");
		flowers.add("jasmin");
		flowers.add("marigold");
		flowers.add("lotus");
		flowers.add("tulasi");
		flowers.add("dasisy");
		flowers.add("lavender");
		System.out.println("total flowers are:" + flowers.size());
		flowers.clear();
		System.out.println("total flowers are:" + flowers.size());
		System.out.println("       ");
		Collection<Integer> pincode = new LinkedList<>();
		pincode.add(1234);
		pincode.add(3456);
		pincode.add(69890);
		pincode.add(154124);
		pincode.add(14845);
		pincode.add(54845);
		pincode.add(54845);
		pincode.add(2184);
		pincode.add(2181);
		pincode.add(5484);
		System.out.println("total pincode are:" + pincode.size());
		pincode.clear();
		System.out.println("total pincode are:" + pincode.size());
		System.out.println("       ");
		Collection<Character> alpha = new LinkedHashSet<Character>();
		alpha.add('A');
		alpha.add('B');
		alpha.add('C');
		alpha.add('D');
		alpha.add('E');
		alpha.add('F');
		alpha.add('G');
		alpha.add('H');
		alpha.add('I');
		alpha.add('J');
		System.out.println("totsl number of alpha are:" + alpha.size());
		alpha.clear();
		System.out.println("totsl number of alpha are:" + alpha.size());
		System.out.println("     ");
		Collection<Double> weight = new LinkedHashSet<Double>();
		weight.add((double) 12);
		weight.add((double) 34);
		weight.add((double) 12);
		weight.add((double) 45);
		weight.add((double) 11);
		weight.add((double) 90);
		weight.add((double) 86);
		weight.add((double) 77);
		weight.add((double) 34);
		weight.add((double) 88);
		System.out.println("total number of weights are:" + weight.size());
		weight.clear();
		System.out.println("total number of weights are:" + weight.size());
		System.out.println("     ");
		Collection<Float> num = new LinkedHashSet<Float>();
		num.add((float) 9988007);
		num.add((float) 84584548);
		num.add((float) 48568444);
		num.add((float) 54218254);
		num.add((float) 54952845);
		num.add((float) 54852845);
		num.add((float) 54965146);
		num.add((float) 54826944);
		num.add((float) 216564295);
		num.add((float) 21652542);
		System.out.println("total number are:" + num.size());
		num.clear();
		System.out.println("total number  are:" + num.size());
		System.out.println("     ");
		Collection<Short> ref = new LinkedHashSet<Short>();
		ref.add((short) 123);
		ref.add((short) 148);
		ref.add((short) 147);
		ref.add((short) 145);
		ref.add((short) 149);
		ref.add((short) 141);
		ref.add((short) 143);
		ref.add((short) 140);
		ref.add((short) 142);
		ref.add((short) 177);
		System.out.println("total ref are:" + ref.size());
		ref.clear();
		System.out.println("total ref  are:" + ref.size());
		System.out.println("     ");
		Collection<Long> lon = new LinkedHashSet<>();
		lon.add((long) 21545154);
		lon.add((long) 484549545);
		lon.add((long) 215648645);
		lon.add((long) 21652545);
		lon.add((long) 256944566);
		lon.add((long) 346548485);
		lon.add((long) 958565944);
		lon.add((long) 456566695);
		lon.add((long) 865254956);
		lon.add((long) 326546566);
		System.out.println("total lon are:" + lon.size());
		lon.clear();
		System.out.println("total lon  are:" + lon.size());
		System.out.println("     ");
		Collection<Byte> byt = new LinkedHashSet<>();
		byt.add((byte) 11);
		byt.add((byte) 12);
		byt.add((byte) 13);
		byt.add((byte) 14);
		byt.add((byte) 15);
		byt.add((byte) 16);
		byt.add((byte) 17);
		byt.add((byte) 18);
		byt.add((byte) 19);
		byt.add((byte) 10);
		System.out.println("total byt are:" + byt.size());
		byt.clear();
		System.out.println("total byt  are:" + byt.size());
		System.out.println("     ");
		Collection<Boolean> bol = new LinkedHashSet<>();
		bol.add(true);
		bol.add(false);
		System.out.println("total bol are:" + bol.size());
		bol.clear();
		System.out.println("total bol  are:" + bol.size());
		System.out.println("     ");

	}

}
